name: 'Run brakeman with reviewdog'
description: 'üê∂ Run brakeman in full or diff mode. Use reviewdog for annotations, or fail on new issues only.'
author: 'mgrachev (reviewdog), extended by Labguru'

inputs:
  github_token:
    description: 'GITHUB_TOKEN'
    default: ${{ github.token }}
  brakeman_version:
    description: 'Brakeman version'
  brakeman_flags:
    description: 'Brakeman flags. (brakeman --quiet --format tabs <brakeman_flags>)'
    default: ''
  tool_name:
    description: 'Tool name to use for reviewdog reporter'
    default: 'brakeman'
  level:
    description: 'Report level for reviewdog [info,warning,error]'
    default: 'error'
  reporter:
    description: |
      Reporter of reviewdog command [github-pr-check,github-pr-review].
      Default is github-pr-check.
    default: 'github-pr-check'
  filter_mode:
    description: |
      Filtering mode for the reviewdog command [added,diff_context,file,nofilter].
      Default is added.
    default: 'added'
  fail_level:
    description: |
      If set to `none`, always use exit code 0 for reviewdog. Otherwise, exit code 1 for reviewdog if it finds at least 1 issue with severity greater than or equal to the given level.
      Possible values: [none,any,info,warning,error]
      Default is `none`.
    default: 'none'
  fail_on_error:
    description: |
      Deprecated, use `fail_level` instead.
      Exit code for reviewdog when errors are found [true,false]
      Default is `false`.
    deprecationMessage: Deprecated, use `fail_level` instead.
    default: 'false'
  reviewdog_flags:
    description: 'Additional reviewdog flags'
    default: ''
  workdir:
    description: "The directory from which to look for and run brakeman. Default '.'"
    default: '.'
  skip_install:
    description: "Do not install Brakeman. Default: `false`"
    default: 'false'
  use_bundler:
    description: "Run Brakeman with bundle exec. Default: `false`"
    default: 'false'
  mode:
    description: |
      Run mode:
      - `full` (default): Run Brakeman and report all findings using reviewdog annotations on the pull request.
      - `diff`: Run Brakeman on both the base and PR commits, and fail only if new warnings are introduced in changed Ruby files.
    default: 'full'

runs:
  using: 'composite'
  steps:
    - name: Extract PR metadata
      shell: sh
      env:
        GH_TOKEN: ${{ inputs.github_token }}
      run: |
        echo "MERGE_BASE_REF=${{ github.event.pull_request.base.ref }}" >> $GITHUB_ENV
        echo "MERGE_BASE_SHA=${{ github.event.pull_request.base.sha }}" >> $GITHUB_ENV

        changed_files="$(gh pr view ${{ github.event.pull_request.number }} --json files -q '.files[].path')"
        changed_ruby_files="$(echo "$changed_files" | grep -v '^vendor/' | grep '\.rb$' || true)"
        echo "CHANGED_RUBY_FILES=$(echo "$changed_ruby_files" | tr '\n' ':' )" >> $GITHUB_ENV

    - run: $GITHUB_ACTION_PATH/script.sh
      shell: sh
      env:
        REVIEWDOG_VERSION: v0.20.3
        INPUT_GITHUB_TOKEN: ${{ inputs.github_token }}
        INPUT_BRAKEMAN_VERSION: ${{ inputs.brakeman_version }}
        INPUT_BRAKEMAN_FLAGS: ${{ inputs.brakeman_flags }}
        INPUT_TOOL_NAME: ${{ inputs.tool_name }}
        INPUT_LEVEL: ${{ inputs.level }}
        INPUT_REPORTER: ${{ inputs.reporter }}
        INPUT_FILTER_MODE: ${{ inputs.filter_mode }}
        INPUT_FAIL_LEVEL: ${{ inputs.fail_level }}
        INPUT_FAIL_ON_ERROR: ${{ inputs.fail_on_error }}
        INPUT_REVIEWDOG_FLAGS: ${{ inputs.reviewdog_flags }}
        INPUT_WORKDIR: ${{ inputs.workdir }}
        INPUT_SKIP_INSTALL: ${{ inputs.skip_install }}
        INPUT_USE_BUNDLER: ${{ inputs.use_bundler }}
        INPUT_MODE: ${{ inputs.mode }}
        MERGE_BASE_REF: ${{ env.MERGE_BASE_REF }}
        MERGE_BASE_SHA: ${{ env.MERGE_BASE_SHA }}
        CHANGED_RUBY_FILES: ${{ env.CHANGED_RUBY_FILES }}

branding:
  icon: 'check-circle'
  color: 'red'
